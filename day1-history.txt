vi /etc/modules-load.d/kubernetes.conf
apt-get update; apt-get install vim -y curl
vi /etc/modules-load.d/kubernetes.conf
sysctl -a | grep -i ipv4.ip_forward
sysctl -a | grep -i bridge-nf-call
vi /etc/sysctl.d/99-kubernetes.conf
systemctl --system
sysctl --system
sysctl -a | grep -i bridge-nf-call
sysctl -a | grep -i ipv4.ip_forward
swapon -s
swapoff -a
swapon -s
vi /etc/fstab
apt-get install containerd -y
ping wp.pl
apt-get install containerd -y
mkdir /etc/containerd
containerd config default | tee /etc/containerd/config.toml
sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
systemctl restart containerd
apt-get install apt-transport-https -y
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
vi /etc/apt/sources.list.d/kubernetes.list
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
apt-cache madison kubeadm
apt-get update
apt-cache madison kubeadm
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
apt-get update
apt-cache madison kubeadm
apt-get install kubeadm=1.30.4-1.1 kubelet=1.30.4-1.1 kubectl=1.30.4-1.1 -y
apt-mark hold kubectl kubeadm kubelet
kubeadm init --help
kubeadm init --node-name master --pod-network-cidr 192.168.0.0/16
kubectl cluster-info
ls -la /etc/kubernetes/pki
kubeadm certs check-expiration
export KUBECONFIG=/etc/kubernetes/admin.conf
kubectl cluster-info
kubectl get nodes
kubectl get pods -A
CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt)
CLI_ARCH=amd64
if [ "$(uname -m)" = "aarch64" ]; then CLI_ARCH=arm64; fi
curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
sha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum
sudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin
rm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
cilium install
wach -n1 kubectl get pods -A
watch -n1 kubectl get pods -A
kubectl get nodes
sudo kubeadm token create --print-join-command
modprobe overlay
sudo modprobe overlay
sudo modprobe br_netfilter
lsmod | grep -e overlay -e br_netfilter
sudo -i
kubectl get nodes
mkdir -p $HOME/.kube
kubectl get nodes
kubectl drain k8s-worker01 
kubectl drain k8s-worker01 --ignore-daemonsets
kubectl get nodes
kubectl delete node k8s-master01
kubectl delete node k8s-worker01
kubectl get nodes
watch -n1 kubectl get pods -A
watch -n1 kubectl get pods --all-namespaces 
watch -n1 kubectl get pods --all-namespaces -o wide
kubectl get ns
kubectl get namespaces
kubectl run pod1 --image nginx
kubectl run pod1 --image nginx -n kube-system
kubectl get pods -A
kubectl get pods -A -o wide
kubectl exec -it pod1 -- bash
kubectl create ns app1
kubectl get namespaces
kubectl get all -n app11
kubectl get all -n app1
kubectl get all 
kubectl get all -n kube-system
kubectl get ns app1
kubectl describe ns app1
kubectl create ns app2 --dry-run=client -o yaml
kubectl create ns app2 --dry-run=client -o yaml> app2.yaml
vi app2.yaml 
kubectl get ns app1
kubectl get ns app1 -o yaml > app1.yaml
vi app1.yaml
kubectl create ns app3
kubectl get ns app3 -o yaml > app3.yaml
diff app3.yaml app1.yaml 
vi .kube/config 
sudo apt-get install bash-completion
echo 'source <(kubectl completion bash)' >>~/.bashrc
source ~/.bashrc
kubectl config get-contexts
kubectl config view 
ls -al
git clone https://github.com/mariano-italiano/lx-k_Sep.git
sudo apt-get install -y git
git clone https://github.com/mariano-italiano/lx-k_Sep.git
cd lx-k_Sep/
mkdir day1
cd day1/
mv ../../app* .
ls -la
vi first-pod.yaml
kubectl apply -f first-pod.yaml 
kubectl get pods
kubectl --help
kubectl get --help
kubectl run mk-pod --image marcinkujawski/python-api:1.0 --labels app=python 
kubectl get pods -w
kubectl run web-pod --image httpd ; watch -n1 kubectl get pods
kubectl describe pod mk-pod 
kubectl get pods 
kubectl get pods -o wide
kubectl get pods -o wide --show-labels 
kubectl get pods first-pod -o json
kubectl get pods first-pod -o wide --sort-by .metadata.name
kubectl get pods -o wide --sort-by .metadata.name
kubectl get pods -o wide --sort-by .spec.containers.image
kubectl get pods -o wide --sort-by .spec.containers[0].image
kubectl get pods
kubectl get pods | awk '{ print $1 }'
kubectl get pods --no-headers | awk '{ print $1 }'
for i in $(kubectl get pods --no-headers | awk '{ print $1 }'); do echo $i; done
for i in $(kubectl get pods --no-headers | awk '{ print $1 }'); do kubectl get pod $i -o json | grep '"image":'; done
for i in $(kubectl get pods --no-headers | awk '{ print $1 }'); do kubectl get pod $i -o json | grep '"image":' tail -n1; done
for i in $(kubectl get pods --no-headers | awk '{ print $1 }'); do kubectl get pod $i -o json | grep '"image":'| tail -n1; done
kubectl get pods -o wide --sort-by .spec.containers[0].image
kubectl get pods --selector run 
kubectl get pods --show-labels --selector run 
kubectl get pods --show-labels --selector run=web-pod
kubectl exec -it web-pod -- bash
kubectl delete pod web-pod 
sudo vi /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
sudo -i
git pull
vi ../day-history.txt
history
ls -la
cd ..
ls -la
history| awk '$1 > 5' | cut -c 8- >> day-history.txt 
